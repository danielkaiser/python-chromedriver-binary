stages:
    - build
    - test
    - deploy-github
    - deploy-pypi

generate:
    stage: build
    image: python:3
    only:
        - schedule@kaiser/python-chromedriver-binary
    script:
        - apt-get update
        - apt-get install -y python3-venv sed ssh git
        - mkdir --mode=700 ~/.ssh/
        - (umask 0377 && echo "$GITLAB_PRIVATE_KEY" > ~/.ssh/id_rsa
                      && echo "iffgit.fz-juelich.de $GITLAB_HOST_KEY" >> ~/.ssh/known_hosts)
        - git config --global user.email "d.kaiser@fz-juelich.de"
        - git config --global user.name "Daniel Kaiser"
        - git remote set-url --push origin gitlab@iffgit.fz-juelich.de:kaiser/python-chromedriver-binary.git
        - python3 -m venv schedule-env
        - schedule-env/bin/python -m pip install requests
        - cp get_versions.py /tmp/
        - for VERSION in `schedule-env/bin/python /tmp/get_versions.py`; do
              git checkout master;
              git checkout origin/schedule README.md setup.py;
              sed -i "s/@@CHROMEDRIVER_VERSION@@/${VERSION}/g" README.md;
              sed -i "s/@@CHROMEDRIVER_VERSION@@/${VERSION}/g" setup.py;
              git add README.md setup.py;
              git commit -m "Chromedriver version ${VERSION}";
              git tag -a -m "v${VERSION}.0" "v${VERSION}.0";
              git push -f origin master;
              git push -f origin --tags;
          done

build:
    stage: build
    image: python:3
    only:
        - master@kaiser/python-chromedriver-binary
        - tags@kaiser/python-chromedriver-binary
        - chromedriver-binary-auto@kaiser/python-chromedriver-binary
    script:
        - python3 setup.py sdist
    artifacts:
        paths:
        - dist/
        expire_in: 1 week

python3-test:
    stage: test
    image: python:3
    only:
        - master@kaiser/python-chromedriver-binary
        - tags@kaiser/python-chromedriver-binary
    script:
        - apt-get update
        - apt-get install -y python3-venv
        - apt-get install -y libglib2.0-0 libx11-6 libnss3 libx11-xcb1 libdbus-1-3
        - rm -rf chromedriver_binary
        - python3 -m venv env
        - env/bin/pip install dist/*
        - ls `env/bin/python3 -c "import chromedriver_binary; print(chromedriver_binary.chromedriver_filename)"`
        - VERSION=$(PATH=`env/bin/chromedriver-path` chromedriver -v | cut -d' ' -f2 | cut -d'.' -f1-4)
        - PY_VERS=$(env/bin/pip list --format=freeze | grep 'chromedriver-binary' | cut -d'=' -f3 | cut -d'.' -f1-4)
        - echo "Version $VERSION $PY_VERS"
        - test "$VERSION" = "$PY_VERS"
    dependencies:
    - build

python2-test:
    stage: test
    image: python:2
    only:
        - master@kaiser/python-chromedriver-binary
        - tags@kaiser/python-chromedriver-binary
    script:
        - apt-get update
        - apt-get install -y virtualenv
        - apt-get install -y libglib2.0-0 libx11-6 libnss3 libx11-xcb1 libdbus-1-3
        - rm -rf chromedriver_binary
        - virtualenv env
        - env/bin/pip install --no-index dist/*
        - ls `env/bin/python2.7 -c "import chromedriver_binary; print(chromedriver_binary.chromedriver_filename)"`
        - VERSION=$(PATH=`env/bin/chromedriver-path` chromedriver -v | cut -d' ' -f2 | cut -d'.' -f1-4)
        - PY_VERS=$(env/bin/pip freeze | grep 'chromedriver-binary' | cut -d'=' -f3 | cut -d'.' -f1-4)
        - echo "Version $VERSION $PY_VERS"
        - test "$VERSION" = "$PY_VERS"
    dependencies:
    - build

deploy-github:
    stage: deploy-github
    image: alpine
    only:
        - master@kaiser/python-chromedriver-binary
        - chromedriver-binary-auto@kaiser/python-chromedriver-binary
        - tags@kaiser/python-chromedriver-binary
    script:
        - apk add --no-cache openssh-client git
        - if [ -n "$CI_COMMIT_BRANCH" ]; then git checkout "$CI_COMMIT_BRANCH"; else git checkout master; fi
        - mkdir --mode=700 ~/.ssh/
        - (umask 0377 && echo "$GITHUB_PRIVATE_KEY" > ~/.ssh/id_rsa
                      && echo "github.com $GITHUB_HOST_KEY" >> ~/.ssh/known_hosts)
        - git config --global user.email "d.kaiser@fz-juelich.de"
        - git config --global user.name "Daniel Kaiser"
        - git remote add github git@github.com:danielkaiser/python-chromedriver-binary.git
        - git fetch github
        - if [ -n "$CI_COMMIT_BRANCH" ]; then git push -f github "$CI_COMMIT_BRANCH"; fi
        - if [ -n "$CI_COMMIT_TAG" ]; then git push -f github --tags; fi

deploy-pypi:
    stage: deploy-pypi
    image: python:3
    only:
        - tags@kaiser/python-chromedriver-binary
    script:
        - rm -rf deploy && mkdir deploy && cd deploy
        - apt-get update
        - apt-get install -y python3-venv
        - python3 -m venv env
        - env/bin/python -m pip install --upgrade pip
        - env/bin/python -m pip install twine
        - echo "[distutils]"                                 > ~/.pypirc
        - echo "index-servers ="                            >> ~/.pypirc
        - echo "    pypi"                                   >> ~/.pypirc
        - echo "[pypi]"                                     >> ~/.pypirc
        - echo "username=$PYPIUSERNAME"                     >> ~/.pypirc
        - echo "password=$PYPIPASSWORD"                     >> ~/.pypirc
        - env/bin/twine upload --repository pypi ../dist/*.tar.gz
    dependencies:
    - build

deploy-pypi-auto:
    stage: deploy-pypi
    image: python:3
    only:
        - chromedriver-binary-auto@kaiser/python-chromedriver-binary
    script:
        - rm -rf deploy && mkdir deploy && cd deploy
        - apt-get update
        - apt-get install -y python3-venv
        - python3 -m venv env
        - env/bin/python -m pip install --upgrade pip
        - env/bin/python -m pip install twine
        - echo "[distutils]"                                 > ~/.pypirc
        - echo "index-servers ="                            >> ~/.pypirc
        - echo "    pypi"                                   >> ~/.pypirc
        - echo "[pypi]"                                     >> ~/.pypirc
        - echo "username=$PYPIUSERNAME"                     >> ~/.pypirc
        - echo "password=$PYPIPASSWORD_AUTO"                >> ~/.pypirc
        - env/bin/twine upload --repository pypi ../dist/*.tar.gz
    dependencies:
    - build

